[{"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\index.js":"1","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\reportWebVitals.js":"2","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\App.js":"3","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\Client.js":"4","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Login.js":"5","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\AuthProvider.js":"6","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Messaggi.js":"7","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\client.js":"8","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\UtentiOnline.js":"9","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\SocketProvider.js":"10","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Conversazioni.js":"11","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\hooks\\useLocalStorage.js":"12"},{"size":546,"mtime":1608577301088,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":901,"mtime":1609517268603,"results":"16","hashOfConfig":"14"},{"size":1716,"mtime":1609607085002,"results":"17","hashOfConfig":"14"},{"size":1867,"mtime":1609517201048,"results":"18","hashOfConfig":"14"},{"size":2714,"mtime":1609426767225,"results":"19","hashOfConfig":"14"},{"size":3380,"mtime":1609690775983,"results":"20","hashOfConfig":"14"},{"size":2323,"mtime":1608640157681,"results":"21","hashOfConfig":"14"},{"size":2775,"mtime":1609694884097,"results":"22","hashOfConfig":"14"},{"size":1485,"mtime":1609364129481,"results":"23","hashOfConfig":"14"},{"size":3542,"mtime":1609697164845,"results":"24","hashOfConfig":"14"},{"size":1420,"mtime":1609693688535,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wz1hpj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\index.js",[],["57","58"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\reportWebVitals.js",[],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\App.js",["59","60"],"import './App.css';\nimport Client from './client/Client';\n\nimport AuthProvider from './context/AuthProvider'\nimport SocketProvider from './context/SocketProvider'\nimport { Container, Button } from 'react-bootstrap'\n\nimport { useState, useEffect } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://127.0.0.1:4001\";\n\nlet socket = socketIOClient(ENDPOINT, {\n  // autoConnect: false,\n  // reconnection: false,\n  // reconnecting: false,\n})\n\nfunction App() {\n  const [riconnetti, setRiconnetti] = useState(false)\n\n  useEffect(() => {\n    if (riconnetti) {\n      socket.connect()\n      setRiconnetti(false)\n    }\n  }, [riconnetti])\n\n  return (\n\n    <div className=\"App\">\n      <SocketProvider socket={socket}>\n        <AuthProvider>\n            <Client setRiconnetti={setRiconnetti}/>\n        </AuthProvider>\n      </SocketProvider>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\Client.js",["61"],"import React, { useRef, useState } from 'react'\r\nimport { Container, Nav } from 'react-bootstrap'\r\n\r\nimport Login from '../components/Login';\r\nimport Conversazioni from '../components/Conversazioni'\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\n\r\nexport default function Client({ setRiconnetti }) {\r\n    const [activePanel, setActivePanel] = useState(\"conversazioni\")\r\n    const { user } = useAuth()\r\n\r\n\r\n    const renderPanel = () => {\r\n        switch (activePanel) {\r\n            case \"contatti\":\r\n                return \"I miei contatti, da implementare\"\r\n            case \"conversazioni\":\r\n                return <Conversazioni />\r\n            default:\r\n                return <Conversazioni />\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* Navbar Contatti / Conversazioni\r\n            se Converazioni allora mostra Conversazioni altrimenti mostro Contatti \r\n            */}\r\n            <Container className=\"p-0 d-flex flex-column border\" style={{ height: \"100vh\" }}>\r\n\r\n                <Login setRiconnetti={setRiconnetti} />\r\n\r\n                <Nav className=\"justify-content-center\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"contatti\" onClick={() => { setActivePanel(\"contatti\") }}>Contatti</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"conversazioni\" onClick={() => { setActivePanel(\"conversazioni\") }}>Conversazioni</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n\r\n                <Container className=\"h-100\">\r\n                    {user.name && renderPanel() }\r\n                </Container>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Login.js",["62"],"import React, { useEffect, useRef } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nexport default function Login({ setRiconnetti }) {\r\n    const { user, signin, signout } = useAuth()\r\n    const { socketInfo } = useSocket()\r\n    const { socketStatus, socketId } = socketInfo\r\n    const idRef = useRef()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        signin(idRef.current.value)\r\n        idRef.current.value = \"\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login d-flex justify-content-end align-items-center p-2\">\r\n\r\n            {socketStatus === \"Connesso\" && <h5 className=\"mr-5\" style={{ color: \"darkgreen\" }}>{socketId}</h5>}\r\n\r\n            {socketStatus === \"Non connesso\" &&\r\n\r\n                <Button variant=\"warning\" className=\"mr-5\" onClick={() => {\r\n                    setRiconnetti(true)\r\n                    // idRef.current.value && signin(idRef.current.value)\r\n                }}>\r\n                    Connetti al server</Button>}\r\n\r\n            {!user.name ?\r\n                <Form onSubmit={(e) => handleSubmit(e)} className=\"d-flex align-items-center\">\r\n                    <Form.Control type=\"text\" required ref={idRef} placeholder=\"Inserisci ID\" />\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"ml-2\">Login</Button>\r\n                    <Button type=\"submit\" variant=\"secondary\" className=\"ml-2\">Nuovo</Button>\r\n                </Form>\r\n                :\r\n                <>\r\n                    <h4 className=\"mr-4\">\r\n                        {user.name && user.name}\r\n                    </h4>\r\n                    <Button type=\"submit\" variant=\"primary\" onClick={() => { signout() }}>Logout</Button>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\AuthProvider.js",["63","64","65","66"],"import React, { createContext, useState, useContext, useEffect, useReducer, useCallback } from 'react'\r\nimport { useCookies } from 'react-cookie'\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nexport const authContext = createContext()\r\n\r\n//shorthands per utilizzare il contesto\r\nexport function useAuth() {\r\n    return useContext(authContext)\r\n}\r\n\r\n\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const { socket, socketInfo } = useSocket()\r\n    const { socketStatus, socketId } = socketInfo\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n    const initialUser = {\r\n        name: '',\r\n        socketId: ''\r\n    }\r\n    const [emit, setEmit] = useState({ type: \"welcome\", user: initialUser })\r\n\r\n    const reducer = (user, action) => {\r\n        let newUser\r\n        switch (action.type) {\r\n            case 'signin':\r\n                newUser = {\r\n                    ...user,\r\n                    name: action.payload,\r\n                //    id: Math.floor(Math.random() * (100)),\r\n                    socketId\r\n                }\r\n                setEmit({ type: action.type, user: newUser })       //socket.emit(action.type, newUser, (res) => console.log(res))\r\n                return newUser\r\n            case 'signout':\r\n                setEmit({ type: action.type, user: user })       // socket.emit(action.type, user, (res) => console.log(res))\r\n                newUser = {\r\n                    ...user,\r\n                    name: '',\r\n                    socketId: ''\r\n                }\r\n                return newUser\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    const [user, dispatch] = useReducer(reducer, initialUser);\r\n\r\n    const signin = (usernameValue) => {\r\n        const current = new Date()\r\n        current.setHours(current.getHours(), current.getMinutes() + 50, current.getSeconds()); //dopo un'ora\r\n        setCookie('user', usernameValue, { path: '/', expires: current });\r\n        dispatch({ type: 'signin', payload: usernameValue })\r\n    }\r\n\r\n    const signout = () => {\r\n        removeCookie('user')\r\n        dispatch({ type: 'signout' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cookies.user || user.name) {\r\n            dispatch({ type: 'signin', payload: cookies.user })\r\n        }\r\n    }, [socketId])\r\n\r\n    //invio messaggio al server al variare di emit (altrimenti fa invio doppio)\r\n    useEffect(() => {\r\n        socket.emit(emit.type, emit.user, (res) => console.log(res))\r\n    }, [emit])\r\n\r\n\r\n    const auth = {\r\n        user,\r\n        signin,\r\n        signout\r\n    }\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Messaggi.js",["67","68","69","70","71","72","73","74","75"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\client.js",["76","77"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\UtentiOnline.js",["78","79","80","81","82"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\SocketProvider.js",["83","84","85","86"],"import React, {\r\n    createContext, useState, useContext, useEffect,\r\n    useReducer, useCallback, useMemo\r\n} from 'react'\r\n\r\n\r\n\r\nexport const socketContext = createContext()\r\n\r\n//shorthands per utilizzare il contesto\r\nexport function useSocket() {\r\n    return useContext(socketContext)\r\n}\r\n\r\nexport default function SocketProvider({ socket, children }) {\r\n\r\n    const [socketStatus, setSocketStatus] = useState('Non connesso')\r\n    const [socketId, setSocketId] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connesso al server\")\r\n            setSocketStatus('Connesso')\r\n            setSocketId(socket.id)\r\n        });\r\n\r\n        socket.on('disconnect', (reason) => {\r\n            socket.disconnect()\r\n            setSocketStatus('Non connesso')\r\n            console.log(reason)\r\n            if (reason === 'io server disconnect') {\r\n                // the disconnection was initiated by the server, you need to reconnect manually\r\n            }\r\n            if (reason === 'transport close') {\r\n\r\n            }\r\n            // else the socket will automatically try to reconnect\r\n        });\r\n\r\n       \r\n    }, [])\r\n\r\n\r\n \r\n\r\n\r\n    const socketInfo = {\r\n        socketStatus,\r\n        socketId\r\n    }\r\n\r\n\r\n    const socketValue = {\r\n        socket,\r\n        socketInfo\r\n    }\r\n\r\n\r\n    return (\r\n        <socketContext.Provider value={socketValue}>\r\n            {children}\r\n        </socketContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Conversazioni.js",["87","88","89","90","91"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\hooks\\useLocalStorage.js",["92","93","94"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst PREFIX = 'live-chat-'\r\n\r\nexport default function useLocalStorage(key) {\r\n\r\n    //ogni volta carica tutti i messaggi\r\n    // const [value, setValue] = useState(() => {\r\n    //     const jsonValue = localStorage.getItem(PREFIX + key)\r\n    //     if (jsonValue != null) return JSON.parse(jsonValue)\r\n    // })\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem(PREFIX + key, JSON.stringify(value))\r\n    // }, [value])\r\n\r\n\r\n    // //carica solo i messaggi inviati con un particolare recipient\r\n    // const loadValue = (me, recipient) => {\r\n    //     let msgs = []\r\n\r\n    //     Array.from(value).forEach((el) => {\r\n    //         console.log(\"EL\", el)\r\n    //         if (el.to === recipient || el.from === recipient)\r\n    //             msgs.push(el)\r\n    //     })\r\n\r\n    //     //da ordinare secondo la data msgs.time, poi return\r\n    //     return msgs\r\n\r\n    // }\r\n\r\n\r\n    //ritorna tutti i messaggi salvati nel db locale (nel quale user.name è coinvolto)\r\n    const loadValue = (username) => {\r\n        const jsonValue = localStorage.getItem(PREFIX + key + \"-\" + username)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n    \r\n    }\r\n\r\n    const saveValue = (username, valueToSave) => {\r\n        localStorage.setItem(PREFIX + key + \"-\" + username, JSON.stringify(valueToSave))\r\n\r\n    }\r\n\r\n\r\n    return [loadValue, saveValue]\r\n}\r\n\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"103","line":6,"column":21,"nodeType":"101","messageId":"102","endLine":6,"endColumn":27},{"ruleId":"99","severity":1,"message":"104","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"99","severity":1,"message":"105","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"106","line":1,"column":77,"nodeType":"101","messageId":"102","endLine":1,"endColumn":88},{"ruleId":"99","severity":1,"message":"107","line":16,"column":13,"nodeType":"101","messageId":"102","endLine":16,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":69,"column":8,"nodeType":"110","endLine":69,"endColumn":18,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":74,"column":8,"nodeType":"110","endLine":74,"endColumn":14,"suggestions":"113"},{"ruleId":"99","severity":1,"message":"114","line":1,"column":46,"nodeType":"101","messageId":"102","endLine":1,"endColumn":54},{"ruleId":"99","severity":1,"message":"100","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":2,"column":21,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"116","line":2,"column":26,"nodeType":"101","messageId":"102","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"117","line":2,"column":50,"nodeType":"101","messageId":"102","endLine":2,"endColumn":53},{"ruleId":"99","severity":1,"message":"118","line":2,"column":55,"nodeType":"101","messageId":"102","endLine":2,"endColumn":60},{"ruleId":"99","severity":1,"message":"119","line":13,"column":7,"nodeType":"101","messageId":"102","endLine":13,"endColumn":11},{"ruleId":"99","severity":1,"message":"120","line":14,"column":7,"nodeType":"101","messageId":"102","endLine":14,"endColumn":12},{"ruleId":"108","severity":1,"message":"121","line":35,"column":8,"nodeType":"110","endLine":35,"endColumn":26,"suggestions":"122"},{"ruleId":"99","severity":1,"message":"115","line":2,"column":21,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"123","line":9,"column":11,"nodeType":"101","messageId":"102","endLine":9,"endColumn":19},{"ruleId":"99","severity":1,"message":"116","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"118","line":2,"column":15,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"117","line":2,"column":27,"nodeType":"101","messageId":"102","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"124","line":17,"column":8,"nodeType":"110","endLine":17,"endColumn":10,"suggestions":"125"},{"ruleId":"108","severity":1,"message":"126","line":43,"column":8,"nodeType":"110","endLine":43,"endColumn":21,"suggestions":"127"},{"ruleId":"99","severity":1,"message":"128","line":3,"column":5,"nodeType":"101","messageId":"102","endLine":3,"endColumn":15},{"ruleId":"99","severity":1,"message":"106","line":3,"column":17,"nodeType":"101","messageId":"102","endLine":3,"endColumn":28},{"ruleId":"99","severity":1,"message":"129","line":3,"column":30,"nodeType":"101","messageId":"102","endLine":3,"endColumn":37},{"ruleId":"108","severity":1,"message":"112","line":42,"column":8,"nodeType":"110","endLine":42,"endColumn":10,"suggestions":"130"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},{"ruleId":"108","severity":1,"message":"131","line":57,"column":8,"nodeType":"110","endLine":57,"endColumn":10,"suggestions":"132"},{"ruleId":"108","severity":1,"message":"133","line":61,"column":8,"nodeType":"110","endLine":61,"endColumn":17,"suggestions":"134"},{"ruleId":"108","severity":1,"message":"135","line":67,"column":8,"nodeType":"110","endLine":67,"endColumn":19,"suggestions":"136"},{"ruleId":"108","severity":1,"message":"137","line":80,"column":8,"nodeType":"110","endLine":80,"endColumn":18,"suggestions":"138"},{"ruleId":"99","severity":1,"message":"139","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"114","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"105","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'socketStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.user' and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["142"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["143"],"'useState' is defined but never used.","'Tab' is defined but never used.","'Nav' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","'MINE' is assigned a value but never used.","'YOURS' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lastMessage'. Either include it or remove the dependency array.",["144"],"'panelRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onlineUsers.length', 'setTotUsers', 'socket', and 'user.name'. Either include them or remove the dependency array. If 'setTotUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["145"],"React Hook useEffect has missing dependencies: 'recipient' and 'setRecipient'. Either include them or remove the dependency array. If 'setRecipient' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["146"],"'useReducer' is defined but never used.","'useMemo' is defined but never used.",["147"],"React Hook useEffect has missing dependencies: 'loadValue', 'socket', and 'user.name'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'recipient'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'loadValue', 'msgFrom', and 'user.name'. Either include them or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'recipient', 'saveValue', and 'user.name'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMsgWithRecipient' needs the current value of 'recipient'.",["151"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [cookies.user, socketId, user.name]",{"range":"172","text":"173"},"Update the dependencies array to be: [emit, socket]",{"range":"174","text":"175"},"Update the dependencies array to be: [lastMessage, msgWithRecipient]",{"range":"176","text":"177"},"Update the dependencies array to be: [onlineUsers.length, setTotUsers, socket, user.name]",{"range":"178","text":"179"},"Update the dependencies array to be: [onlineUsers, recipient, setRecipient]",{"range":"180","text":"181"},"Update the dependencies array to be: [socket]",{"range":"182","text":"183"},"Update the dependencies array to be: [loadValue, socket, user.name]",{"range":"184","text":"185"},"Update the dependencies array to be: [msgFrom, recipient]",{"range":"186","text":"187"},"Update the dependencies array to be: [loadValue, msgFrom, recipient, user.name]",{"range":"188","text":"189"},"Update the dependencies array to be: [messaggi, recipient, saveValue, user.name]",{"range":"190","text":"191"},[2303,2313],"[cookies.user, socketId, user.name]",[2499,2505],"[emit, socket]",[962,980],"[lastMessage, msgWithRecipient]",[711,713],"[onlineUsers.length, setTotUsers, socket, user.name]",[1899,1912],"[onlineUsers, recipient, setRecipient]",[1179,1181],"[socket]",[1545,1547],"[loadValue, socket, user.name]",[1656,1665],"[msgFrom, recipient]",[1840,1851],"[loadValue, msgFrom, recipient, user.name]",[2199,2209],"[messaggi, recipient, saveValue, user.name]"]