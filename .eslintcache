[{"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\index.js":"1","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\reportWebVitals.js":"2","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\App.js":"3","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\Client.js":"4","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Login.js":"5","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\AuthProvider.js":"6","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Messaggi.js":"7","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\client.js":"8","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\SocketProvider.js":"9","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Conversazioni.js":"10","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\hooks\\useLocalStorage.js":"11","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\PrivateRoute.js":"12","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ConnectedRoute.js":"13","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ListaUtentiOnline.js":"14","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\TestComponent.js":"15","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\UserActions.js":"16"},{"size":546,"mtime":1608577301088,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1648,"mtime":1610897556572,"results":"20","hashOfConfig":"18"},{"size":1584,"mtime":1610744864860,"results":"21","hashOfConfig":"18"},{"size":1725,"mtime":1610307216270,"results":"22","hashOfConfig":"18"},{"size":2714,"mtime":1609793149197,"results":"23","hashOfConfig":"18"},{"size":5181,"mtime":1610996021274,"results":"24","hashOfConfig":"18"},{"size":2323,"mtime":1608640157681,"results":"25","hashOfConfig":"18"},{"size":2085,"mtime":1609966416392,"results":"26","hashOfConfig":"18"},{"size":13749,"mtime":1611005453450,"results":"27","hashOfConfig":"18"},{"size":2158,"mtime":1610140454209,"results":"28","hashOfConfig":"18"},{"size":774,"mtime":1609792773985,"results":"29","hashOfConfig":"18"},{"size":948,"mtime":1609787156725,"results":"30","hashOfConfig":"18"},{"size":3490,"mtime":1610919946462,"results":"31","hashOfConfig":"18"},{"size":3999,"mtime":1610031466155,"results":"32","hashOfConfig":"18"},{"size":2043,"mtime":1610917160447,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1wz1hpj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"36"},"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\index.js",[],["78","79"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\reportWebVitals.js",[],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\App.js",["80","81","82","83","84","85"],"import './App.css';\nimport Client from './client/Client';\nimport Login from './components/Login';\nimport PrivateRoute from './components/PrivateRoute'\nimport ConnectedRoute from './components/ConnectedRoute'\nimport TestComponent from './components/TestComponent'\n\nimport AuthProvider from './context/AuthProvider'\nimport SocketProvider from './context/SocketProvider'\nimport { Container, Button } from 'react-bootstrap'\n\nimport { useState, useEffect } from 'react';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, Redirect\n} from \"react-router-dom\";\n\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\n\n\n\n\n/* \n\nTODO:\n  + gestire al meglio il routing, magari da capo con i file di backup\n    fare un routing in linea con sviluppi di app future\n\n  + simulazioni chat e test scimmia su ogni caso d'uso\n\n  + postgre: salvataggio Nuovi utenti in database\n  + postgre: salvataggio messaggi e definizione generale tabelle \n  \n\n\n*/\n\n\n\nfunction App() {\n\n\n  return (\n\n   <>\n      {/* <TestComponent /> */}\n      <Router history={history}>\n        <SocketProvider>\n          <AuthProvider>\n            <ConnectedRoute>\n\n              <Switch>\n\n                <Route exact path=\"/login\">\n                  <Login />\n                </Route>\n\n                <PrivateRoute path=\"/main\">\n                  <Client />\n                </PrivateRoute>\n\n                <Route path=\"/\">\n                  <Redirect to=\"/main\" />\n                </Route>\n\n              </Switch>\n\n            </ConnectedRoute>\n          </AuthProvider>\n        </SocketProvider>\n      </Router>\n</>\n  );\n}\n\nexport default App;","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\Client.js",["86","87","88","89","90","91","92","93","94"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Nav, Button, Row, Col } from 'react-bootstrap'\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport Conversazioni from '../components/Conversazioni'\r\n\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\n\r\n\r\n\r\nexport default function Client() {\r\n    const { user } = useAuth()\r\n\r\n    const [activePanel, setActivePanel] = useState(\"conversazioni\")\r\n    const { socketInfo } = useSocket()\r\n    const { socketId } = socketInfo\r\n\r\n\r\n    const renderPanel = () => {\r\n        switch (activePanel) {\r\n            case \"contatti\":\r\n                return \"I miei contatti, da implementare\"\r\n            case \"conversazioni\":\r\n                return <Conversazioni />\r\n            default:\r\n                return <Conversazioni />\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            {/* <Nav className=\"justify-content-center\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"contatti\" onClick={() => { setActivePanel(\"contatti\") }}>\r\n                            Contatti\r\n                            </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"conversazioni\" onClick={() => { setActivePanel(\"conversazioni\") }}>\r\n                            Conversazioni\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav> */}\r\n\r\n\r\n            {/* {user.name && renderPanel()} */}\r\n            {user.name && <Conversazioni />}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Login.js",["95","96","97"],"import React, { useEffect, useRef } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nexport default function Login() {\r\n    const { user, signin, signout } = useAuth()\r\n    const { socketInfo } = useSocket()\r\n    const { socketStatus, socketId } = socketInfo\r\n    const idRef = useRef()\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // qui potrebbe avvenire il controllo nella tabella user ???\r\n        // if (username === \"team5\" && password === \"123\") {\r\n        signin(idRef.current.value)\r\n        history.push(\"/main\")\r\n        idRef.current.value = \"\"\r\n        //}\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Login d-flex justify-content-end align-items-center p-2\">\r\n\r\n\r\n                <Form onSubmit={(e) => handleSubmit(e)} className=\"d-flex align-items-center\">\r\n\r\n\r\n                    <Form.Control type=\"text\" required ref={idRef}\r\n                        placeholder=\"Inserisci ID\" />\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"ml-2\">Login</Button>\r\n\r\n                    <Button type=\"submit\" variant=\"secondary\" className=\"ml-2\">Nuovo</Button>\r\n                </Form>\r\n                <>\r\n                    <h4 className=\"mr-4\">\r\n\r\n                    </h4>\r\n                </>\r\n\r\n            </div>\r\n            <div className=\"text-right mt-2\" >\r\n                {socketStatus === \"Connesso\" && <h5 className=\"mr-5\" style={{ color: \"darkgreen\" }}>{socketId}</h5>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\AuthProvider.js",["98","99","100","101"],"import React, { createContext, useState, useContext, useEffect, useReducer, useCallback } from 'react'\r\nimport { useCookies } from 'react-cookie'\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nexport const authContext = createContext()\r\n\r\n//shorthands per utilizzare il contesto\r\nexport function useAuth() {\r\n    return useContext(authContext)\r\n}\r\n\r\n\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const { socket, socketInfo } = useSocket()\r\n    const { socketStatus, socketId } = socketInfo\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n    const initialUser = {\r\n        name: '',\r\n        socketId: ''\r\n    }\r\n    const [emit, setEmit] = useState({ type: \"welcome\", user: initialUser })\r\n\r\n    const reducer = (user, action) => {\r\n        let newUser\r\n        switch (action.type) {\r\n            case 'signin':\r\n                newUser = {\r\n                    ...user,\r\n                    name: action.payload,\r\n                //    id: Math.floor(Math.random() * (100)),\r\n                    socketId\r\n                }\r\n                setEmit({ type: action.type, user: newUser })       //socket.emit(action.type, newUser, (res) => console.log(res))\r\n                return newUser\r\n            case 'signout':\r\n                setEmit({ type: action.type, user: user })       // socket.emit(action.type, user, (res) => console.log(res))\r\n                newUser = {\r\n                    ...user,\r\n                    name: '',\r\n                    socketId: ''\r\n                }\r\n                return newUser\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    const [user, dispatch] = useReducer(reducer, initialUser);\r\n\r\n    const signin = (usernameValue) => {\r\n        const current = new Date()\r\n        current.setHours(current.getHours(), current.getMinutes() + 50, current.getSeconds()); //dopo un'ora\r\n        setCookie('user', usernameValue, { path: '/', expires: current });\r\n        dispatch({ type: 'signin', payload: usernameValue })\r\n    }\r\n\r\n    const signout = () => {\r\n        removeCookie('user')\r\n        dispatch({ type: 'signout' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cookies.user || user.name) {\r\n            dispatch({ type: 'signin', payload: cookies.user })\r\n        }\r\n    }, [socketId])\r\n\r\n    //invio messaggio al server al variare di emit (altrimenti fa invio doppio)\r\n    useEffect(() => {\r\n        socket.emit(emit.type, emit.user, (res) => console.log(res))\r\n    }, [emit])\r\n\r\n\r\n    const auth = {\r\n        user,\r\n        signin,\r\n        signout\r\n    }\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Messaggi.js",["102","103","104","105","106","107","108","109","110","111"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\client.js",["112","113"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\SocketProvider.js",["114","115","116"],"import React, {\r\n    createContext, useState, useContext, useEffect,\r\n    useReducer, useCallback, useMemo\r\n} from 'react'\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nlet socket = socketIOClient(ENDPOINT, {\r\n    // autoConnect: false,\r\n    // reconnection: false,\r\n    // reconnecting: false,\r\n})\r\n\r\n\r\nexport const socketContext = createContext()\r\n\r\n//shorthands per utilizzare il contesto\r\nexport function useSocket() {\r\n    return useContext(socketContext)\r\n}\r\n\r\nexport default function SocketProvider({ children }) {\r\n\r\n    const [socketStatus, setSocketStatus] = useState('Non connesso')\r\n\r\n\r\n    const [socketId, setSocketId] = useState('')\r\n\r\n    const [newConnection, setNewConnection] = useState(false)\r\n\r\n\r\n    //da automatizzare con setInterval, ma genera errore non gestito se il server è spento\r\n    useEffect(() => {\r\n        if (newConnection) {\r\n            socket.connect()\r\n\r\n            setNewConnection(false)\r\n        }\r\n    }, [newConnection])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connesso al server\")\r\n            setSocketStatus('Connesso')\r\n\r\n            setSocketId(socket.id)\r\n        });\r\n\r\n        socket.on('disconnect', (reason) => {\r\n            socket.disconnect()\r\n            socket.close();\r\n            setSocketStatus('Non connesso')\r\n\r\n            console.log(reason)\r\n            if (reason === 'io server disconnect') {\r\n                // the disconnection was initiated by the server, you need to reconnect manually\r\n            }\r\n            if (reason === 'transport close') {\r\n\r\n            }\r\n            // else the socket will automatically try to reconnect\r\n        });\r\n       \r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const socketInfo = {\r\n        socketStatus,\r\n        socketId\r\n    }\r\n\r\n\r\n    const socketValue = {\r\n        socket,\r\n        socketInfo,\r\n        setNewConnection,\r\n    }\r\n\r\n\r\n    return (\r\n        <socketContext.Provider value={socketValue}>\r\n            {children}\r\n        </socketContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Conversazioni.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\hooks\\useLocalStorage.js",["136","137","138","139","140","141"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\nexport default function useLocalStorage(key) {\r\n\r\n    // creo uno spazio nel local storage con un nome del tipo:   \"conv-userName-withName\"\r\n    // in modo che ad un differente login cambi userName e quindi l'insieme delle converazioni\r\n\r\n    const clearStorage = () => {\r\n        localStorage.clear()\r\n    }\r\n\r\n    const loadAllConv = () => {\r\n        const res = []\r\n        const allStoreKey = Array.from(Object.keys(localStorage))\r\n        allStoreKey.map((from) => {\r\n            const jsonValue = localStorage.getItem(from)\r\n            console.log(\"jsonValue\", jsonValue)\r\n            if (jsonValue != null) res.push(JSON.parse(jsonValue))\r\n        })\r\n        return res\r\n    }\r\n\r\n    //carica le conversazioni con gli user contenuti nell'array users. Restituisccce un array di conversazioni\r\n    const loadConv = (users) => {\r\n        const res = []\r\n        const allStoreKey = Array.from(Object.keys(localStorage))\r\n        if (Array.isArray(users)) {\r\n            users.map(user => {\r\n                const indice = allStoreKey.findIndex(el => el.substring(key.length + 1) === user.userName)\r\n                if (indice > -1) {\r\n                    const jsonValue = localStorage.getItem(key + \"-\" + user.userName)\r\n                    if (jsonValue != null) res.push(JSON.parse(jsonValue))\r\n                }\r\n            })\r\n        }\r\n        else {\r\n\r\n            const indice = allStoreKey.findIndex(el => el.substring(key.length + 1) === users)\r\n            if (indice > -1) {\r\n                const jsonValue = localStorage.getItem(key + \"-\" + users)\r\n                if (jsonValue != null) res.push(JSON.parse(jsonValue))\r\n            }\r\n\r\n        }\r\n        return res\r\n    }\r\n\r\n    const loadSingleConv = (username) => {\r\n        const jsonValue = localStorage.getItem(key + \"-\" + username)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n    }\r\n\r\n\r\n    const storeConv = (conversation, recipient) => {\r\n        localStorage.setItem(key + \"-\" + recipient, JSON.stringify(conversation))\r\n    }\r\n\r\n\r\n    return [loadSingleConv, loadConv, loadAllConv, storeConv]\r\n}\r\n\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\PrivateRoute.js",["142","143","144"],"\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n    const { user } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user.name ? (\r\n                    children\r\n                )\r\n                    : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n\r\n    );\r\n}","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ConnectedRoute.js",["145","146","147","148"],"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nexport default function ConnectedRoute({ children, ...rest }) {\r\n\r\n    const { socketInfo, setNewConnection } = useSocket()\r\n    const { socketStatus } = socketInfo\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() =>\r\n                socketStatus === \"Connesso\" ? (\r\n                    children\r\n                ) : (\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"warning\" className=\"mr-5 p-3 w-100\" onClick={() => {\r\n                            setNewConnection(true)\r\n                        }}>Connetti al server</Button>\r\n                        </div>\r\n\r\n                    )\r\n            }\r\n        />\r\n\r\n    );\r\n}","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ListaUtentiOnline.js",["149","150","151","152","153","154","155"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { Nav, Alert, Row, Col, Badge } from 'react-bootstrap'\r\nimport { update } from \"jdenticon\";\r\n\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\nexport default function ListaUtentiOnline({ recipient, setRecipient, onlineUsers, conv, searchValue, setSearchValue, searchRef }) {\r\n    const { user } = useAuth()\r\n\r\n    useEffect(() => {\r\n        const timerAvatar = setInterval(() => {\r\n            const lista = document.querySelectorAll(\"div.usersList > canvas\");\r\n            lista.forEach(c => {\r\n                update(`#${c.id}`, c.id)\r\n            })\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearInterval(timerAvatar)\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const checkSearch = (username) => {\r\n        if (username.toUpperCase().includes(searchValue.toUpperCase())) return true\r\n        return false\r\n    }\r\n\r\n    const getLastMessage = (name) => {\r\n        const c = conv.find(e => e.with === name)\r\n        if (c) {\r\n            if (c.msgs.length > 0) {\r\n                const lastMsg = c.msgs[c.msgs.length - 1]\r\n                if (lastMsg.from === user.name && lastMsg.read)\r\n                    return (\r\n                        <>\r\n                            <i className=\"fa fa-check checkReadIcon small-text mr-1\"></i>\r\n                            { lastMsg.body}\r\n                        </>\r\n                    )\r\n                else\r\n                    return lastMsg.body\r\n            }\r\n        }\r\n        else return \"\"\r\n    }\r\n\r\n\r\n\r\n    const totMsgToRead = (name) => {\r\n        let totMsgToRead = 0\r\n        const c = conv.find(e => e.with === name)\r\n        if (c) {\r\n            if (c.with !== recipient) {\r\n                totMsgToRead = c.msgs.filter(m => {\r\n                    if (m.read === false && m.from !== user.name) {\r\n                        return true\r\n                    }\r\n                })\r\n\r\n            }\r\n        }\r\n        return totMsgToRead.length\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"UtentiOnline\" className=\"d-flex flex-column \"   >\r\n            <div className=\"text-center pb-2 small-text\">Online: {onlineUsers.length}</div>\r\n\r\n            {onlineUsers.map((el, index) => (\r\n\r\n                checkSearch(el.userName) &&\r\n\r\n                <div key={index} className={recipient === el.userName ?\r\n                    \"usersList contactLink d-flex align-items-center justify-content-between  contactActive \" :\r\n                    \"usersList contactLink d-flex align-items-center justify-content-between \"}\r\n                    onClick={() => {\r\n                        setRecipient(el.userName)\r\n                        setSearchValue(\"\")\r\n                        searchRef.current.value = \"\"\r\n                    }}>\r\n\r\n\r\n                    <canvas id={el.userName} width=\"45\" height=\"45\" className=\"canvasAvatarUsers d-flex\"></canvas>\r\n                    <div className=\" d-flex flex-column flex-grow-1 minWidthZero\">\r\n                        <div className=\"ml-3 wrapDots\">{el.userName}</div>\r\n                        <div className=\"ml-3 small-text wrapDots\">{getLastMessage(el.userName)}</div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Badge variant=\"info\" className=\"p-2\">\r\n                            {totMsgToRead(el.userName) > 0 && totMsgToRead(el.userName)}\r\n                        </Badge>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\TestComponent.js",["156","157","158","159","160","161","162","163","164","165"],"import React, { useState, useRef, useEffect, useReducer } from 'react'\r\nimport { Container, Tab, Nav, Form, Button, Row, Col, Alert } from 'react-bootstrap'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\n\r\nfunction TestComponent() {\r\n    const msgRef = useRef()\r\n    const recipientRef = useRef()\r\n    const [loadConv, loadAllConv, storeConv, clearStorage] = useLocalStorage('conv')\r\n\r\n\r\n    function reducer(conversations, action) {\r\n        switch (action.type) {\r\n            case 'addMessageToConv':\r\n                const { recipient, msg } = action.payload\r\n\r\n                const newArrayConv = [...conversations]\r\n                let newSingleConv = {\r\n                    with: recipient,\r\n                    msgs: [msg]\r\n                }\r\n                let indice = conversations.findIndex(c => {\r\n                    if (c.with === recipient) {\r\n                        newSingleConv = {\r\n                            with: c.with,\r\n                            msgs: [...c.msgs, msg]\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n\r\n\r\n                if (indice > -1) {\r\n                    newArrayConv.splice(indice, 1, newSingleConv)\r\n                    return newArrayConv\r\n                }\r\n                else\r\n                    return [\r\n                        ...newArrayConv,\r\n                        newSingleConv\r\n                    ]\r\n\r\n            case 'clearConv':\r\n                return []\r\n            case 'loadAllConv':\r\n                return loadAllConv()\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    const [conv, dispatch] = useReducer(reducer, []);\r\n\r\n    // const storeConvWith = (recipient) => {\r\n    //     const convToStore = conv.find(c => c.with === recipient)\r\n    //     storeConv(convToStore, recipient)\r\n    // }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const recipient = recipientRef.current.value\r\n        const msg = msgRef.current.value\r\n\r\n        dispatch({ type: 'addMessageToConv', payload: { recipient, msg } })\r\n\r\n\r\n        recipientRef.current.value = \"\"\r\n        msgRef.current.value = \"\"\r\n    }\r\n\r\n    useEffect(() => {\r\n       // conv.map(c => storeConv(c, c.with))\r\n    }, [conv])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"danger\" onClick={() => { dispatch({ type: 'clearConv' }) }}>clear</Button>\r\n            <Button variant=\"success\" onClick={() => {dispatch({ type: 'loadConv' })}}>CARICA CONVERSAZIONI</Button>\r\n            <Button variant=\"danger\" onClick={() => clearStorage()}>CLEAR STORAGE</Button>\r\n\r\n            <Form onSubmit={e => handleSubmit(e)} className=\"d-flex justify-content-between\">\r\n\r\n                <input className=\"inputMessage p-4 \"\r\n                    type=\"text\" ref={recipientRef}\r\n                    placeholder=\"Nome\"\r\n                    required />\r\n\r\n                <input className=\"inputMessage mt-4 p-4 \"\r\n                    type=\"text\" ref={msgRef}\r\n                    placeholder=\"Messaggio\"\r\n                    required />\r\n\r\n\r\n                <Button type=\"submit\" variant=\"success\" className=\"buttonMessage\">Invia</Button>\r\n            </Form>\r\n\r\n\r\n            <div className=\"ml-4 mt-4\">\r\n                {conv ?\r\n                    conv.map((c, index) => (\r\n                        <div className=\"d-flex border\" key={index}>\r\n                            <div className=\"flex-grow-1\"><strong>{c.with}</strong></div>\r\n                            <div className=\"flex-grow-1\">\r\n                                {c.msgs.map((msg, index) => (\r\n                                    <div key={index}>{msg}</div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                    :\r\n                    <h4>Non ci sono messaggi</h4>\r\n                }\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TestComponent\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\UserActions.js",["166","167","168"],"import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport { update } from \"jdenticon\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UserActions({ searchValue, setSearchValue, searchRef }) {\r\n    const { user, signout } = useAuth()\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const timerAvatar = setInterval(() => {\r\n            update(\"#myAvatar\", user.name)\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearInterval(timerAvatar)\r\n        }\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n    }\r\n    const handleChange = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column w-100  \">\r\n            <div className=\"\">\r\n                <div className=\"d-flex flex-column align-items-center \">\r\n                    <div className=\"d-flex\">\r\n                        <canvas id=\"myAvatar\" className=\"m-2 canvasAvatarUsername\" width=\"70\" height=\"70\"></canvas>\r\n                        <div className=\"buttonLogout ml-2\" onClick={() => {\r\n                            history.push(\"/login\");\r\n                            signout()\r\n                        }}><i className=\"fa fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <h3 className=\"wrapWord   w-100 text-center  \">{user.name}</h3>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <form onSubmit={e => handleSubmit(e)}>\r\n                <div className=\"searchUserOnline mt-2\">\r\n                    <input type=\"text\" className=\"searchBar\" placeholder=\"Search...\"\r\n                        onChange={(e) => { handleChange(e) }} ref={searchRef} />\r\n                    <div className=\"searchButtonIcon\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserActions\r\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":21},{"ruleId":"173","severity":1,"message":"177","line":10,"column":10,"nodeType":"175","messageId":"176","endLine":10,"endColumn":19},{"ruleId":"173","severity":1,"message":"178","line":10,"column":21,"nodeType":"175","messageId":"176","endLine":10,"endColumn":27},{"ruleId":"173","severity":1,"message":"179","line":12,"column":10,"nodeType":"175","messageId":"176","endLine":12,"endColumn":18},{"ruleId":"173","severity":1,"message":"180","line":12,"column":20,"nodeType":"175","messageId":"176","endLine":12,"endColumn":29},{"ruleId":"173","severity":1,"message":"181","line":19,"column":3,"nodeType":"175","messageId":"176","endLine":19,"endColumn":7},{"ruleId":"173","severity":1,"message":"180","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"177","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":19},{"ruleId":"173","severity":1,"message":"182","line":2,"column":21,"nodeType":"175","messageId":"176","endLine":2,"endColumn":24},{"ruleId":"173","severity":1,"message":"178","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":32},{"ruleId":"173","severity":1,"message":"183","line":2,"column":34,"nodeType":"175","messageId":"176","endLine":2,"endColumn":37},{"ruleId":"173","severity":1,"message":"184","line":2,"column":39,"nodeType":"175","messageId":"176","endLine":2,"endColumn":42},{"ruleId":"173","severity":1,"message":"185","line":14,"column":25,"nodeType":"175","messageId":"176","endLine":14,"endColumn":39},{"ruleId":"173","severity":1,"message":"186","line":16,"column":13,"nodeType":"175","messageId":"176","endLine":16,"endColumn":21},{"ruleId":"173","severity":1,"message":"187","line":19,"column":11,"nodeType":"175","messageId":"176","endLine":19,"endColumn":22},{"ruleId":"173","severity":1,"message":"180","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"188","line":9,"column":13,"nodeType":"175","messageId":"176","endLine":9,"endColumn":17},{"ruleId":"173","severity":1,"message":"189","line":9,"column":27,"nodeType":"175","messageId":"176","endLine":9,"endColumn":34},{"ruleId":"173","severity":1,"message":"190","line":1,"column":77,"nodeType":"175","messageId":"176","endLine":1,"endColumn":88},{"ruleId":"173","severity":1,"message":"191","line":16,"column":13,"nodeType":"175","messageId":"176","endLine":16,"endColumn":25},{"ruleId":"192","severity":1,"message":"193","line":69,"column":8,"nodeType":"194","endLine":69,"endColumn":18,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":74,"column":8,"nodeType":"194","endLine":74,"endColumn":14,"suggestions":"197"},{"ruleId":"173","severity":1,"message":"198","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"199","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":44},{"ruleId":"173","severity":1,"message":"177","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":19},{"ruleId":"173","severity":1,"message":"200","line":2,"column":21,"nodeType":"175","messageId":"176","endLine":2,"endColumn":24},{"ruleId":"173","severity":1,"message":"182","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":29},{"ruleId":"173","severity":1,"message":"183","line":2,"column":45,"nodeType":"175","messageId":"176","endLine":2,"endColumn":48},{"ruleId":"173","severity":1,"message":"184","line":2,"column":50,"nodeType":"175","messageId":"176","endLine":2,"endColumn":53},{"ruleId":"173","severity":1,"message":"201","line":2,"column":55,"nodeType":"175","messageId":"176","endLine":2,"endColumn":60},{"ruleId":"173","severity":1,"message":"202","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":21},{"ruleId":"192","severity":1,"message":"203","line":55,"column":8,"nodeType":"194","endLine":55,"endColumn":14,"suggestions":"204"},{"ruleId":"173","severity":1,"message":"200","line":2,"column":21,"nodeType":"175","messageId":"176","endLine":2,"endColumn":24},{"ruleId":"173","severity":1,"message":"205","line":9,"column":11,"nodeType":"175","messageId":"176","endLine":9,"endColumn":19},{"ruleId":"173","severity":1,"message":"206","line":3,"column":5,"nodeType":"175","messageId":"176","endLine":3,"endColumn":15},{"ruleId":"173","severity":1,"message":"190","line":3,"column":17,"nodeType":"175","messageId":"176","endLine":3,"endColumn":28},{"ruleId":"173","severity":1,"message":"207","line":3,"column":30,"nodeType":"175","messageId":"176","endLine":3,"endColumn":37},{"ruleId":"173","severity":1,"message":"177","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":19},{"ruleId":"173","severity":1,"message":"178","line":2,"column":21,"nodeType":"175","messageId":"176","endLine":2,"endColumn":27},{"ruleId":"173","severity":1,"message":"208","line":28,"column":28,"nodeType":"175","messageId":"176","endLine":28,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":49,"column":52,"nodeType":"211","messageId":"212","endLine":49,"endColumn":54},{"ruleId":"213","severity":1,"message":"214","line":74,"column":17,"nodeType":"215","messageId":"216","endLine":74,"endColumn":22},{"ruleId":"173","severity":1,"message":"217","line":77,"column":35,"nodeType":"175","messageId":"176","endLine":77,"endColumn":43},{"ruleId":"209","severity":1,"message":"210","line":81,"column":52,"nodeType":"211","messageId":"212","endLine":81,"endColumn":54},{"ruleId":"213","severity":1,"message":"214","line":156,"column":17,"nodeType":"215","messageId":"216","endLine":156,"endColumn":22},{"ruleId":"209","severity":1,"message":"218","line":161,"column":31,"nodeType":"211","messageId":"219","endLine":161,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":171,"column":17,"nodeType":"215","messageId":"216","endLine":171,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":175,"column":17,"nodeType":"215","messageId":"216","endLine":175,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":178,"column":17,"nodeType":"215","messageId":"216","endLine":178,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":181,"column":17,"nodeType":"215","messageId":"216","endLine":181,"endColumn":22},{"ruleId":"192","severity":1,"message":"220","line":221,"column":8,"nodeType":"194","endLine":221,"endColumn":10,"suggestions":"221"},{"ruleId":"192","severity":1,"message":"222","line":251,"column":8,"nodeType":"194","endLine":251,"endColumn":17,"suggestions":"223"},{"ruleId":"192","severity":1,"message":"224","line":260,"column":8,"nodeType":"194","endLine":260,"endColumn":15,"suggestions":"225"},{"ruleId":"192","severity":1,"message":"222","line":267,"column":8,"nodeType":"194","endLine":267,"endColumn":26,"suggestions":"226"},{"ruleId":"192","severity":1,"message":"227","line":290,"column":8,"nodeType":"194","endLine":290,"endColumn":19,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":349,"column":37,"nodeType":"231","endLine":349,"endColumn":76},{"ruleId":"173","severity":1,"message":"232","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":13},{"ruleId":"173","severity":1,"message":"179","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"180","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"233","line":9,"column":11,"nodeType":"175","messageId":"176","endLine":9,"endColumn":23},{"ruleId":"209","severity":1,"message":"218","line":16,"column":32,"nodeType":"211","messageId":"219","endLine":16,"endColumn":34},{"ruleId":"209","severity":1,"message":"218","line":29,"column":28,"nodeType":"211","messageId":"219","endLine":29,"endColumn":30},{"ruleId":"173","severity":1,"message":"234","line":6,"column":17,"nodeType":"175","messageId":"176","endLine":6,"endColumn":27},{"ruleId":"173","severity":1,"message":"180","line":6,"column":29,"nodeType":"175","messageId":"176","endLine":6,"endColumn":38},{"ruleId":"173","severity":1,"message":"179","line":6,"column":40,"nodeType":"175","messageId":"176","endLine":6,"endColumn":48},{"ruleId":"173","severity":1,"message":"235","line":3,"column":17,"nodeType":"175","messageId":"176","endLine":3,"endColumn":25},{"ruleId":"173","severity":1,"message":"234","line":7,"column":17,"nodeType":"175","messageId":"176","endLine":7,"endColumn":27},{"ruleId":"173","severity":1,"message":"180","line":7,"column":29,"nodeType":"175","messageId":"176","endLine":7,"endColumn":38},{"ruleId":"173","severity":1,"message":"179","line":7,"column":40,"nodeType":"175","messageId":"176","endLine":7,"endColumn":48},{"ruleId":"173","severity":1,"message":"179","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"199","line":1,"column":38,"nodeType":"175","messageId":"176","endLine":1,"endColumn":44},{"ruleId":"173","severity":1,"message":"182","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":13},{"ruleId":"173","severity":1,"message":"201","line":2,"column":15,"nodeType":"175","messageId":"176","endLine":2,"endColumn":20},{"ruleId":"173","severity":1,"message":"183","line":2,"column":22,"nodeType":"175","messageId":"176","endLine":2,"endColumn":25},{"ruleId":"173","severity":1,"message":"184","line":2,"column":27,"nodeType":"175","messageId":"176","endLine":2,"endColumn":30},{"ruleId":"209","severity":1,"message":"236","line":57,"column":48,"nodeType":"211","messageId":"212","endLine":57,"endColumn":50},{"ruleId":"173","severity":1,"message":"179","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"177","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":19},{"ruleId":"173","severity":1,"message":"200","line":2,"column":21,"nodeType":"175","messageId":"176","endLine":2,"endColumn":24},{"ruleId":"173","severity":1,"message":"182","line":2,"column":26,"nodeType":"175","messageId":"176","endLine":2,"endColumn":29},{"ruleId":"173","severity":1,"message":"183","line":2,"column":45,"nodeType":"175","messageId":"176","endLine":2,"endColumn":48},{"ruleId":"173","severity":1,"message":"184","line":2,"column":50,"nodeType":"175","messageId":"176","endLine":2,"endColumn":53},{"ruleId":"173","severity":1,"message":"201","line":2,"column":55,"nodeType":"175","messageId":"176","endLine":2,"endColumn":60},{"ruleId":"173","severity":1,"message":"208","line":9,"column":12,"nodeType":"175","messageId":"176","endLine":9,"endColumn":20},{"ruleId":"173","severity":1,"message":"237","line":9,"column":35,"nodeType":"175","messageId":"176","endLine":9,"endColumn":44},{"ruleId":"209","severity":1,"message":"210","line":22,"column":56,"nodeType":"211","messageId":"212","endLine":22,"endColumn":58},{"ruleId":"173","severity":1,"message":"179","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"178","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"192","severity":1,"message":"238","line":20,"column":8,"nodeType":"194","endLine":20,"endColumn":10,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'TestComponent' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Nav' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'setActivePanel' is assigned a value but never used.","'socketId' is assigned a value but never used.","'renderPanel' is assigned a value but never used.","'user' is assigned a value but never used.","'signout' is assigned a value but never used.","'useCallback' is defined but never used.","'socketStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.user' and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["242"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["243"],"'Fragment' is defined but never used.","'useRef' is defined but never used.","'Tab' is defined but never used.","'Alert' is defined but never used.","'authContext' is defined but never used.","React Hook useEffect has a missing dependency: 'lastMessage'. Either include it or remove the dependency array.",["244"],"'panelRef' is assigned a value but never used.","'useReducer' is defined but never used.","'useMemo' is defined but never used.","'loadConv' is assigned a value but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'withUser' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'socket' and 'user.name'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'recipient'. Either include it or remove the dependency array.",["246"],"React Hook useEffect has missing dependencies: 'currConv' and 'recipient'. Either include them or remove the dependency array.",["247"],["248"],"React Hook useEffect has missing dependencies: 'loadSingleConv', 'msgFrom', and 'storeConv'. Either include them or remove the dependency array.",["249"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'clearStorage' is assigned a value but never used.","'useContext' is defined but never used.","'Redirect' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'storeConv' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.name'. Either include it or remove the dependency array.",["250"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [cookies.user, socketId, user.name]",{"range":"269","text":"270"},"Update the dependencies array to be: [emit, socket]",{"range":"271","text":"272"},"Update the dependencies array to be: [lastMessage, msgs]",{"range":"273","text":"274"},"Update the dependencies array to be: [socket, user.name]",{"range":"275","text":"276"},"Update the dependencies array to be: [msgFrom, recipient]",{"range":"277","text":"278"},"Update the dependencies array to be: [currConv, msgIn, recipient]",{"range":"279","text":"280"},"Update the dependencies array to be: [recipient, userDisconnected]",{"range":"281","text":"282"},"Update the dependencies array to be: [loadSingleConv, msgFrom, recipient, storeConv]",{"range":"283","text":"284"},"Update the dependencies array to be: [user.name]",{"range":"285","text":"286"},[2303,2313],"[cookies.user, socketId, user.name]",[2499,2505],"[emit, socket]",[1663,1669],"[lastMessage, msgs]",[8091,8093],"[socket, user.name]",[9297,9306],"[msgFrom, recipient]",[9672,9679],"[currConv, msgIn, recipient]",[9956,9974],"[recipient, userDisconnected]",[10713,10724],"[loadSingleConv, msgFrom, recipient, storeConv]",[597,599],"[user.name]"]