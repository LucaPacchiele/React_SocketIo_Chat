[{"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\index.js":"1","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\reportWebVitals.js":"2","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\App.js":"3","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\Client.js":"4","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Login.js":"5","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\AuthProvider.js":"6","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Messaggi.js":"7","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\client.js":"8","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\SocketProvider.js":"9","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Conversazioni.js":"10","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\hooks\\useLocalStorage.js":"11","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\PrivateRoute.js":"12","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ConnectedRoute.js":"13","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ListaUtentiOnline.js":"14","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\TestComponent.js":"15"},{"size":546,"mtime":1608577301088,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1676,"mtime":1609956411335,"results":"19","hashOfConfig":"17"},{"size":2504,"mtime":1610040592994,"results":"20","hashOfConfig":"17"},{"size":1725,"mtime":1609786270895,"results":"21","hashOfConfig":"17"},{"size":2714,"mtime":1609793149197,"results":"22","hashOfConfig":"17"},{"size":3423,"mtime":1610226597980,"results":"23","hashOfConfig":"17"},{"size":2323,"mtime":1608640157681,"results":"24","hashOfConfig":"17"},{"size":2085,"mtime":1609966416392,"results":"25","hashOfConfig":"17"},{"size":11976,"mtime":1610291429075,"results":"26","hashOfConfig":"17"},{"size":2158,"mtime":1610140454209,"results":"27","hashOfConfig":"17"},{"size":774,"mtime":1609792773985,"results":"28","hashOfConfig":"17"},{"size":948,"mtime":1609787156725,"results":"29","hashOfConfig":"17"},{"size":1220,"mtime":1610040906584,"results":"30","hashOfConfig":"17"},{"size":3999,"mtime":1610031466155,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1wz1hpj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\index.js",[],["74","75"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\reportWebVitals.js",[],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\App.js",["76","77","78","79","80","81"],"import './App.css';\nimport Client from './client/Client';\nimport Login from './components/Login';\nimport PrivateRoute from './components/PrivateRoute'\nimport ConnectedRoute from './components/ConnectedRoute'\nimport TestComponent from './components/TestComponent'\n\nimport AuthProvider from './context/AuthProvider'\nimport SocketProvider from './context/SocketProvider'\nimport { Container, Button } from 'react-bootstrap'\n\nimport { useState, useEffect } from 'react';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, Redirect\n} from \"react-router-dom\";\n\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\n\n\n\n\n/* \n\nTODO:\n  + gestire al meglio il routing, magari da capo con i file di backup\n    fare un routing in linea con sviluppi di app future\n\n  + simulazioni chat e test scimmia su ogni caso d'uso\n\n  + postgre: salvataggio Nuovi utenti in database\n  + postgre: salvataggio messaggi e definizione generale tabelle \n  \n\n\n*/\n\n\n\nfunction App() {\n\n\n  return (\n\n    <div className=\"App\">\n      {/* <TestComponent /> */}\n      <Router history={history}>\n        <SocketProvider>\n          <AuthProvider>\n            <ConnectedRoute>\n\n              <Switch>\n\n                <Route exact path=\"/login\">\n                  <Login />\n                </Route>\n\n                <PrivateRoute path=\"/main\">\n                  <Client />\n                </PrivateRoute>\n\n                <Route path=\"/\">\n                  <Redirect to=\"/main\" />\n                </Route>\n\n              </Switch>\n\n            </ConnectedRoute>\n          </AuthProvider>\n        </SocketProvider>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\Client.js",["82"],"import React, { useRef, useState } from 'react'\r\nimport { Container, Nav, Button } from 'react-bootstrap'\r\n\r\nimport Conversazioni from '../components/Conversazioni'\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\n\r\n\r\nexport default function Client() {\r\n\r\n    const [activePanel, setActivePanel] = useState(\"conversazioni\")\r\n    const { user, signout } = useAuth()\r\n    const { socketInfo } = useSocket()\r\n    const { socketId } = socketInfo\r\n    let history = useHistory();\r\n\r\n    const renderPanel = () => {\r\n        switch (activePanel) {\r\n            case \"contatti\":\r\n                return \"I miei contatti, da implementare\"\r\n            case \"conversazioni\":\r\n                return <Conversazioni />\r\n            default:\r\n                return <Conversazioni />\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* Navbar Contatti / Conversazioni\r\n            se Converazioni allora mostra Conversazioni altrimenti mostro Contatti \r\n            */}\r\n            <Container className=\"p-0 d-flex flex-column border\" style={{ height: \"100vh\" }}>\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center p-2\">\r\n                    <h6 className=\"mr-5\" style={{ color: \"#558855\" }}>{socketId}</h6>\r\n                    <div className=\"d-flex\">\r\n                        <h3 className=\"mr-4\">{user.name}</h3>\r\n                        <Button type=\"submit\" variant=\"primary\" onClick={() => {\r\n                            history.push(\"/login\");\r\n                            signout()\r\n                        }}>Logout</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <Nav className=\"justify-content-center\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"contatti\" onClick={() => { setActivePanel(\"contatti\") }}>\r\n                            Contatti\r\n                            </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"conversazioni\" onClick={() => { setActivePanel(\"conversazioni\") }}>\r\n                            Conversazioni \r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n\r\n                <Container className=\"h-100\">\r\n                    {user.name && renderPanel()}\r\n                </Container>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Login.js",["83","84","85"],"import React, { useEffect, useRef } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../context/AuthProvider\";\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nexport default function Login() {\r\n    const { user, signin, signout } = useAuth()\r\n    const { socketInfo } = useSocket()\r\n    const { socketStatus, socketId } = socketInfo\r\n    const idRef = useRef()\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // qui potrebbe avvenire il controllo nella tabella user ???\r\n        // if (username === \"team5\" && password === \"123\") {\r\n        signin(idRef.current.value)\r\n        history.push(\"/main\")\r\n        idRef.current.value = \"\"\r\n        //}\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Login d-flex justify-content-end align-items-center p-2\">\r\n\r\n\r\n                <Form onSubmit={(e) => handleSubmit(e)} className=\"d-flex align-items-center\">\r\n\r\n\r\n                    <Form.Control type=\"text\" required ref={idRef}\r\n                        placeholder=\"Inserisci ID\" />\r\n                    <Button type=\"submit\" variant=\"primary\" className=\"ml-2\">Login</Button>\r\n\r\n                    <Button type=\"submit\" variant=\"secondary\" className=\"ml-2\">Nuovo</Button>\r\n                </Form>\r\n                <>\r\n                    <h4 className=\"mr-4\">\r\n\r\n                    </h4>\r\n                </>\r\n\r\n            </div>\r\n            <div className=\"text-right mt-2\" >\r\n                {socketStatus === \"Connesso\" && <h5 className=\"mr-5\" style={{ color: \"darkgreen\" }}>{socketId}</h5>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\AuthProvider.js",["86","87","88","89"],"import React, { createContext, useState, useContext, useEffect, useReducer, useCallback } from 'react'\r\nimport { useCookies } from 'react-cookie'\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nexport const authContext = createContext()\r\n\r\n//shorthands per utilizzare il contesto\r\nexport function useAuth() {\r\n    return useContext(authContext)\r\n}\r\n\r\n\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const { socket, socketInfo } = useSocket()\r\n    const { socketStatus, socketId } = socketInfo\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies();\r\n\r\n    const initialUser = {\r\n        name: '',\r\n        socketId: ''\r\n    }\r\n    const [emit, setEmit] = useState({ type: \"welcome\", user: initialUser })\r\n\r\n    const reducer = (user, action) => {\r\n        let newUser\r\n        switch (action.type) {\r\n            case 'signin':\r\n                newUser = {\r\n                    ...user,\r\n                    name: action.payload,\r\n                //    id: Math.floor(Math.random() * (100)),\r\n                    socketId\r\n                }\r\n                setEmit({ type: action.type, user: newUser })       //socket.emit(action.type, newUser, (res) => console.log(res))\r\n                return newUser\r\n            case 'signout':\r\n                setEmit({ type: action.type, user: user })       // socket.emit(action.type, user, (res) => console.log(res))\r\n                newUser = {\r\n                    ...user,\r\n                    name: '',\r\n                    socketId: ''\r\n                }\r\n                return newUser\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    const [user, dispatch] = useReducer(reducer, initialUser);\r\n\r\n    const signin = (usernameValue) => {\r\n        const current = new Date()\r\n        current.setHours(current.getHours(), current.getMinutes() + 50, current.getSeconds()); //dopo un'ora\r\n        setCookie('user', usernameValue, { path: '/', expires: current });\r\n        dispatch({ type: 'signin', payload: usernameValue })\r\n    }\r\n\r\n    const signout = () => {\r\n        removeCookie('user')\r\n        dispatch({ type: 'signout' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cookies.user || user.name) {\r\n            dispatch({ type: 'signin', payload: cookies.user })\r\n        }\r\n    }, [socketId])\r\n\r\n    //invio messaggio al server al variare di emit (altrimenti fa invio doppio)\r\n    useEffect(() => {\r\n        socket.emit(emit.type, emit.user, (res) => console.log(res))\r\n    }, [emit])\r\n\r\n\r\n    const auth = {\r\n        user,\r\n        signin,\r\n        signout\r\n    }\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Messaggi.js",["90","91","92","93","94","95","96"],"import React, { Fragment, createRef, useRef, useState, useEffect } from 'react'\r\nimport { Container, Tab, Nav, Form, Button, Row, Col, Alert } from 'react-bootstrap'\r\n\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\n//da implementare css messaggi https://codepen.io/swards/pen/gxQmbj\r\n\r\n\r\nexport default function Messaggi({ recipient, msgs, me, spedisciMessaggio }) {\r\n\r\n\r\n    const init_msg = {\r\n        from: '',\r\n        to: '',\r\n        body: '',\r\n        time: '',\r\n        read:false\r\n    }\r\n\r\n    const msgRef = useRef()\r\n    const lastMessage = createRef()\r\n    let currMsg = { init_msg }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        lastMessage.current.scrollIntoView({ behavior: 'smooth' })\r\n    }, [msgs]\r\n    )\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const msg = {\r\n            from: me,\r\n            to: recipient,\r\n            body: msgRef.current.value,\r\n            time: moment().toString(), //necessario convertirlo in stringa poichè verrà usato come ID del messaggio assieme a from e to\r\n            read:false\r\n        }\r\n        \r\n        spedisciMessaggio(recipient, msg)\r\n\r\n        msgRef.current.value = \"\"\r\n    }\r\n\r\n\r\n    return (\r\n        <Row className=\"bggreen d-flex flex-column h-100\">\r\n            <div className=\"p-3 flex-grow-1 justify-content-end overflow-auto\" style={{ height: \"20vh\" }}>\r\n                I miei messaggi con {recipient}\r\n\r\n                {msgs.map((msg, index) => {\r\n                    currMsg = {\r\n                        from: msg.from,\r\n                        to: msg.to,\r\n                        body: msg.body,\r\n                        time: msg.time,\r\n                        read: msg.read\r\n                    }\r\n                    return (\r\n                        <Fragment key={index}>\r\n                            {currMsg.from === me ?\r\n                                <div className=\"mine message d-flex justify-content-between\" >\r\n                                     <div>{msg.body}</div>\r\n                                    {msg.read && <div style={{color:\"green\", fontWeight:\"bold\"}}>v</div>}\r\n                                </div>\r\n                                :\r\n                                <div className=\"yours message \">\r\n                                    {msg.body}\r\n                                </div>\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n                }\r\n                )}\r\n\r\n\r\n                <div ref={lastMessage}>\r\n                    <Moment date={currMsg.time} //in questo momento currMsg è l'ultimo messaggio\r\n                        className={currMsg.from === me ? \"small-text d-flex justify-content-end\" : \"small-text d-flex justify-content-start\"}\r\n                        format=\"HH:mm:ss - DD-MM-YYYY\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"\">\r\n                <Form onSubmit={e => handleSubmit(e)} className=\"d-flex justify-content-between\">\r\n                    <input className=\"inputMessage p-4 flex-grow-1\"\r\n                        type=\"text\" ref={msgRef}\r\n                        placeholder=\"Inserisci il messaggio...\"\r\n                        required />\r\n                    <Button type=\"submit\" variant=\"success\" className=\"buttonMessage\">Invia</Button>\r\n                </Form>\r\n            </div>\r\n        </Row>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\client\\client.js",["97","98"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\context\\SocketProvider.js",["99","100","101"],"import React, {\r\n    createContext, useState, useContext, useEffect,\r\n    useReducer, useCallback, useMemo\r\n} from 'react'\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nlet socket = socketIOClient(ENDPOINT, {\r\n    // autoConnect: false,\r\n    // reconnection: false,\r\n    // reconnecting: false,\r\n})\r\n\r\n\r\nexport const socketContext = createContext()\r\n\r\n//shorthands per utilizzare il contesto\r\nexport function useSocket() {\r\n    return useContext(socketContext)\r\n}\r\n\r\nexport default function SocketProvider({ children }) {\r\n\r\n    const [socketStatus, setSocketStatus] = useState('Non connesso')\r\n\r\n\r\n    const [socketId, setSocketId] = useState('')\r\n\r\n    const [newConnection, setNewConnection] = useState(false)\r\n\r\n\r\n    //da automatizzare con setInterval, ma genera errore non gestito se il server è spento\r\n    useEffect(() => {\r\n        if (newConnection) {\r\n            socket.connect()\r\n\r\n            setNewConnection(false)\r\n        }\r\n    }, [newConnection])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connesso al server\")\r\n            setSocketStatus('Connesso')\r\n\r\n            setSocketId(socket.id)\r\n        });\r\n\r\n        socket.on('disconnect', (reason) => {\r\n            socket.disconnect()\r\n            socket.close();\r\n            setSocketStatus('Non connesso')\r\n\r\n            console.log(reason)\r\n            if (reason === 'io server disconnect') {\r\n                // the disconnection was initiated by the server, you need to reconnect manually\r\n            }\r\n            if (reason === 'transport close') {\r\n\r\n            }\r\n            // else the socket will automatically try to reconnect\r\n        });\r\n       \r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const socketInfo = {\r\n        socketStatus,\r\n        socketId\r\n    }\r\n\r\n\r\n    const socketValue = {\r\n        socket,\r\n        socketInfo,\r\n        setNewConnection,\r\n    }\r\n\r\n\r\n    return (\r\n        <socketContext.Provider value={socketValue}>\r\n            {children}\r\n        </socketContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\Conversazioni.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\hooks\\useLocalStorage.js",["118","119","120","121","122","123"],"import React, { useState, useEffect } from 'react'\r\n\r\n\r\nexport default function useLocalStorage(key) {\r\n\r\n    // creo uno spazio nel local storage con un nome del tipo:   \"conv-userName-withName\"\r\n    // in modo che ad un differente login cambi userName e quindi l'insieme delle converazioni\r\n\r\n    const clearStorage = () => {\r\n        localStorage.clear()\r\n    }\r\n\r\n    const loadAllConv = () => {\r\n        const res = []\r\n        const allStoreKey = Array.from(Object.keys(localStorage))\r\n        allStoreKey.map((from) => {\r\n            const jsonValue = localStorage.getItem(from)\r\n            console.log(\"jsonValue\", jsonValue)\r\n            if (jsonValue != null) res.push(JSON.parse(jsonValue))\r\n        })\r\n        return res\r\n    }\r\n\r\n    //carica le conversazioni con gli user contenuti nell'array users. Restituisccce un array di conversazioni\r\n    const loadConv = (users) => {\r\n        const res = []\r\n        const allStoreKey = Array.from(Object.keys(localStorage))\r\n        if (Array.isArray(users)) {\r\n            users.map(user => {\r\n                const indice = allStoreKey.findIndex(el => el.substring(key.length + 1) === user.userName)\r\n                if (indice > -1) {\r\n                    const jsonValue = localStorage.getItem(key + \"-\" + user.userName)\r\n                    if (jsonValue != null) res.push(JSON.parse(jsonValue))\r\n                }\r\n            })\r\n        }\r\n        else {\r\n\r\n            const indice = allStoreKey.findIndex(el => el.substring(key.length + 1) === users)\r\n            if (indice > -1) {\r\n                const jsonValue = localStorage.getItem(key + \"-\" + users)\r\n                if (jsonValue != null) res.push(JSON.parse(jsonValue))\r\n            }\r\n\r\n        }\r\n        return res\r\n    }\r\n\r\n    const loadSingleConv = (username) => {\r\n        const jsonValue = localStorage.getItem(key + \"-\" + username)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n    }\r\n\r\n\r\n    const storeConv = (conversation, recipient) => {\r\n        localStorage.setItem(key + \"-\" + recipient, JSON.stringify(conversation))\r\n    }\r\n\r\n\r\n    return [loadSingleConv, loadConv, loadAllConv, storeConv]\r\n}\r\n\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\PrivateRoute.js",["124","125","126"],"\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../context/AuthProvider\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n    const { user } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                user.name ? (\r\n                    children\r\n                )\r\n                    : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n\r\n    );\r\n}","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ConnectedRoute.js",["127","128","129","130"],"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { useSocket } from \"../context/SocketProvider\";\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nexport default function ConnectedRoute({ children, ...rest }) {\r\n\r\n    const { socketInfo, setNewConnection } = useSocket()\r\n    const { socketStatus } = socketInfo\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() =>\r\n                socketStatus === \"Connesso\" ? (\r\n                    children\r\n                ) : (\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"warning\" className=\"mr-5 p-3 w-100\" onClick={() => {\r\n                            setNewConnection(true)\r\n                        }}>Connetti al server</Button>\r\n                        </div>\r\n\r\n                    )\r\n            }\r\n        />\r\n\r\n    );\r\n}","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\ListaUtentiOnline.js",["131","132","133","134","135"],"import React, { useEffect, useState } from 'react'\r\nimport { Nav, Alert, Row, Col, Badge } from 'react-bootstrap'\r\n\r\n\r\n\r\nexport default function ListaUtentiOnline({ recipient, setRecipient, onlineUsers, conv }) {\r\n\r\n    const totMsgs = (name) => {\r\n        const c = conv.find(e => e.with === name)\r\n        if (c)\r\n        return c.msgs.length\r\n        else return 0\r\n    }\r\n\r\n    return (\r\n        <Row id=\"UtentiOnline\" className=\"d-flex flex-column h-100\">\r\n            <div>Utenti online: {onlineUsers.length}</div>\r\n            <div className=\"flex-grow-1 justify-content-end overflow-auto\" style={{ height: \"10vh\" }}>\r\n\r\n                {onlineUsers.map((el, index) => (\r\n                    <div key={index} className={recipient === el.userName ?\r\n                        \"contactLink contactActive d-flex justify-content-between\" :\r\n                        \"contactLink d-flex justify-content-between\"}\r\n                        onClick={() => { setRecipient(el.userName) }}>\r\n                        <div>{el.userName}</div>\r\n                        <div><Badge variant=\"light\">{totMsgs(el.userName)}</Badge></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Row>\r\n    )\r\n}\r\n","C:\\Users\\Luca\\Desktop\\Front_end_dev\\Progetti\\live_chat\\src\\components\\TestComponent.js",["136","137","138","139","140","141","142","143","144","145"],"import React, { useState, useRef, useEffect, useReducer } from 'react'\r\nimport { Container, Tab, Nav, Form, Button, Row, Col, Alert } from 'react-bootstrap'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\n\r\nfunction TestComponent() {\r\n    const msgRef = useRef()\r\n    const recipientRef = useRef()\r\n    const [loadConv, loadAllConv, storeConv, clearStorage] = useLocalStorage('conv')\r\n\r\n\r\n    function reducer(conversations, action) {\r\n        switch (action.type) {\r\n            case 'addMessageToConv':\r\n                const { recipient, msg } = action.payload\r\n\r\n                const newArrayConv = [...conversations]\r\n                let newSingleConv = {\r\n                    with: recipient,\r\n                    msgs: [msg]\r\n                }\r\n                let indice = conversations.findIndex(c => {\r\n                    if (c.with === recipient) {\r\n                        newSingleConv = {\r\n                            with: c.with,\r\n                            msgs: [...c.msgs, msg]\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n\r\n\r\n                if (indice > -1) {\r\n                    newArrayConv.splice(indice, 1, newSingleConv)\r\n                    return newArrayConv\r\n                }\r\n                else\r\n                    return [\r\n                        ...newArrayConv,\r\n                        newSingleConv\r\n                    ]\r\n\r\n            case 'clearConv':\r\n                return []\r\n            case 'loadAllConv':\r\n                return loadAllConv()\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    const [conv, dispatch] = useReducer(reducer, []);\r\n\r\n    // const storeConvWith = (recipient) => {\r\n    //     const convToStore = conv.find(c => c.with === recipient)\r\n    //     storeConv(convToStore, recipient)\r\n    // }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const recipient = recipientRef.current.value\r\n        const msg = msgRef.current.value\r\n\r\n        dispatch({ type: 'addMessageToConv', payload: { recipient, msg } })\r\n\r\n\r\n        recipientRef.current.value = \"\"\r\n        msgRef.current.value = \"\"\r\n    }\r\n\r\n    useEffect(() => {\r\n       // conv.map(c => storeConv(c, c.with))\r\n    }, [conv])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"danger\" onClick={() => { dispatch({ type: 'clearConv' }) }}>clear</Button>\r\n            <Button variant=\"success\" onClick={() => {dispatch({ type: 'loadConv' })}}>CARICA CONVERSAZIONI</Button>\r\n            <Button variant=\"danger\" onClick={() => clearStorage()}>CLEAR STORAGE</Button>\r\n\r\n            <Form onSubmit={e => handleSubmit(e)} className=\"d-flex justify-content-between\">\r\n\r\n                <input className=\"inputMessage p-4 \"\r\n                    type=\"text\" ref={recipientRef}\r\n                    placeholder=\"Nome\"\r\n                    required />\r\n\r\n                <input className=\"inputMessage mt-4 p-4 \"\r\n                    type=\"text\" ref={msgRef}\r\n                    placeholder=\"Messaggio\"\r\n                    required />\r\n\r\n\r\n                <Button type=\"submit\" variant=\"success\" className=\"buttonMessage\">Invia</Button>\r\n            </Form>\r\n\r\n\r\n            <div className=\"ml-4 mt-4\">\r\n                {conv ?\r\n                    conv.map((c, index) => (\r\n                        <div className=\"d-flex border\" key={index}>\r\n                            <div className=\"flex-grow-1\"><strong>{c.with}</strong></div>\r\n                            <div className=\"flex-grow-1\">\r\n                                {c.msgs.map((msg, index) => (\r\n                                    <div key={index}>{msg}</div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                    :\r\n                    <h4>Non ci sono messaggi</h4>\r\n                }\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TestComponent\r\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":6,"column":8,"nodeType":"152","messageId":"153","endLine":6,"endColumn":21},{"ruleId":"150","severity":1,"message":"154","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":19},{"ruleId":"150","severity":1,"message":"155","line":10,"column":21,"nodeType":"152","messageId":"153","endLine":10,"endColumn":27},{"ruleId":"150","severity":1,"message":"156","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":18},{"ruleId":"150","severity":1,"message":"157","line":12,"column":20,"nodeType":"152","messageId":"153","endLine":12,"endColumn":29},{"ruleId":"150","severity":1,"message":"158","line":19,"column":3,"nodeType":"152","messageId":"153","endLine":19,"endColumn":7},{"ruleId":"150","severity":1,"message":"159","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":23},{"ruleId":"150","severity":1,"message":"157","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"160","line":9,"column":13,"nodeType":"152","messageId":"153","endLine":9,"endColumn":17},{"ruleId":"150","severity":1,"message":"161","line":9,"column":27,"nodeType":"152","messageId":"153","endLine":9,"endColumn":34},{"ruleId":"150","severity":1,"message":"162","line":1,"column":77,"nodeType":"152","messageId":"153","endLine":1,"endColumn":88},{"ruleId":"150","severity":1,"message":"163","line":16,"column":13,"nodeType":"152","messageId":"153","endLine":16,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":69,"column":8,"nodeType":"166","endLine":69,"endColumn":18,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":74,"column":8,"nodeType":"166","endLine":74,"endColumn":14,"suggestions":"169"},{"ruleId":"150","severity":1,"message":"156","line":1,"column":46,"nodeType":"152","messageId":"153","endLine":1,"endColumn":54},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"150","severity":1,"message":"170","line":2,"column":21,"nodeType":"152","messageId":"153","endLine":2,"endColumn":24},{"ruleId":"150","severity":1,"message":"171","line":2,"column":26,"nodeType":"152","messageId":"153","endLine":2,"endColumn":29},{"ruleId":"150","severity":1,"message":"172","line":2,"column":50,"nodeType":"152","messageId":"153","endLine":2,"endColumn":53},{"ruleId":"150","severity":1,"message":"173","line":2,"column":55,"nodeType":"152","messageId":"153","endLine":2,"endColumn":60},{"ruleId":"164","severity":1,"message":"174","line":30,"column":8,"nodeType":"166","endLine":30,"endColumn":14,"suggestions":"175"},{"ruleId":"150","severity":1,"message":"170","line":2,"column":21,"nodeType":"152","messageId":"153","endLine":2,"endColumn":24},{"ruleId":"150","severity":1,"message":"176","line":9,"column":11,"nodeType":"152","messageId":"153","endLine":9,"endColumn":19},{"ruleId":"150","severity":1,"message":"177","line":3,"column":5,"nodeType":"152","messageId":"153","endLine":3,"endColumn":15},{"ruleId":"150","severity":1,"message":"162","line":3,"column":17,"nodeType":"152","messageId":"153","endLine":3,"endColumn":28},{"ruleId":"150","severity":1,"message":"178","line":3,"column":30,"nodeType":"152","messageId":"153","endLine":3,"endColumn":37},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"150","severity":1,"message":"179","line":24,"column":28,"nodeType":"152","messageId":"153","endLine":24,"endColumn":36},{"ruleId":"180","severity":1,"message":"181","line":40,"column":52,"nodeType":"182","messageId":"183","endLine":40,"endColumn":54},{"ruleId":"184","severity":1,"message":"185","line":65,"column":17,"nodeType":"186","messageId":"187","endLine":65,"endColumn":22},{"ruleId":"150","severity":1,"message":"188","line":68,"column":35,"nodeType":"152","messageId":"153","endLine":68,"endColumn":43},{"ruleId":"180","severity":1,"message":"181","line":72,"column":52,"nodeType":"182","messageId":"183","endLine":72,"endColumn":54},{"ruleId":"180","severity":1,"message":"189","line":107,"column":31,"nodeType":"182","messageId":"190","endLine":107,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":117,"column":17,"nodeType":"186","messageId":"187","endLine":117,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":154,"column":17,"nodeType":"186","messageId":"187","endLine":154,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":158,"column":17,"nodeType":"186","messageId":"187","endLine":158,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":161,"column":17,"nodeType":"186","messageId":"187","endLine":161,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":164,"column":17,"nodeType":"186","messageId":"187","endLine":164,"endColumn":22},{"ruleId":"164","severity":1,"message":"191","line":202,"column":8,"nodeType":"166","endLine":202,"endColumn":10,"suggestions":"192"},{"ruleId":"164","severity":1,"message":"193","line":243,"column":8,"nodeType":"166","endLine":243,"endColumn":17,"suggestions":"194"},{"ruleId":"164","severity":1,"message":"195","line":252,"column":8,"nodeType":"166","endLine":252,"endColumn":15,"suggestions":"196"},{"ruleId":"164","severity":1,"message":"197","line":272,"column":8,"nodeType":"166","endLine":272,"endColumn":19,"suggestions":"198"},{"ruleId":"150","severity":1,"message":"199","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"150","severity":1,"message":"156","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"157","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"200","line":9,"column":11,"nodeType":"152","messageId":"153","endLine":9,"endColumn":23},{"ruleId":"180","severity":1,"message":"189","line":16,"column":32,"nodeType":"182","messageId":"190","endLine":16,"endColumn":34},{"ruleId":"180","severity":1,"message":"189","line":29,"column":28,"nodeType":"182","messageId":"190","endLine":29,"endColumn":30},{"ruleId":"150","severity":1,"message":"201","line":6,"column":17,"nodeType":"152","messageId":"153","endLine":6,"endColumn":27},{"ruleId":"150","severity":1,"message":"157","line":6,"column":29,"nodeType":"152","messageId":"153","endLine":6,"endColumn":38},{"ruleId":"150","severity":1,"message":"156","line":6,"column":40,"nodeType":"152","messageId":"153","endLine":6,"endColumn":48},{"ruleId":"150","severity":1,"message":"202","line":3,"column":17,"nodeType":"152","messageId":"153","endLine":3,"endColumn":25},{"ruleId":"150","severity":1,"message":"201","line":7,"column":17,"nodeType":"152","messageId":"153","endLine":7,"endColumn":27},{"ruleId":"150","severity":1,"message":"157","line":7,"column":29,"nodeType":"152","messageId":"153","endLine":7,"endColumn":38},{"ruleId":"150","severity":1,"message":"156","line":7,"column":40,"nodeType":"152","messageId":"153","endLine":7,"endColumn":48},{"ruleId":"150","severity":1,"message":"157","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"156","line":1,"column":28,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"171","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"173","line":2,"column":15,"nodeType":"152","messageId":"153","endLine":2,"endColumn":20},{"ruleId":"150","severity":1,"message":"172","line":2,"column":27,"nodeType":"152","messageId":"153","endLine":2,"endColumn":30},{"ruleId":"150","severity":1,"message":"156","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"150","severity":1,"message":"170","line":2,"column":21,"nodeType":"152","messageId":"153","endLine":2,"endColumn":24},{"ruleId":"150","severity":1,"message":"171","line":2,"column":26,"nodeType":"152","messageId":"153","endLine":2,"endColumn":29},{"ruleId":"150","severity":1,"message":"203","line":2,"column":45,"nodeType":"152","messageId":"153","endLine":2,"endColumn":48},{"ruleId":"150","severity":1,"message":"172","line":2,"column":50,"nodeType":"152","messageId":"153","endLine":2,"endColumn":53},{"ruleId":"150","severity":1,"message":"173","line":2,"column":55,"nodeType":"152","messageId":"153","endLine":2,"endColumn":60},{"ruleId":"150","severity":1,"message":"179","line":9,"column":12,"nodeType":"152","messageId":"153","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"204","line":9,"column":35,"nodeType":"152","messageId":"153","endLine":9,"endColumn":44},{"ruleId":"180","severity":1,"message":"181","line":22,"column":56,"nodeType":"182","messageId":"183","endLine":22,"endColumn":58},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'TestComponent' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useRef' is defined but never used.","'user' is assigned a value but never used.","'signout' is assigned a value but never used.","'useCallback' is defined but never used.","'socketStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.user' and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["208"],"'Tab' is defined but never used.","'Nav' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has a missing dependency: 'lastMessage'. Either include it or remove the dependency array.",["209"],"'panelRef' is assigned a value but never used.","'useReducer' is defined but never used.","'useMemo' is defined but never used.","'loadConv' is assigned a value but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'withUser' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'onlineUsers', 'socket', and 'user.name'. Either include them or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'recipient'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'currConv' and 'recipient'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'loadSingleConv', 'msgFrom', and 'storeConv'. Either include them or remove the dependency array.",["213"],"'React' is defined but never used.","'clearStorage' is assigned a value but never used.","'useContext' is defined but never used.","'Redirect' is defined but never used.","'Row' is defined but never used.","'storeConv' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [cookies.user, socketId, user.name]",{"range":"228","text":"229"},"Update the dependencies array to be: [emit, socket]",{"range":"230","text":"231"},"Update the dependencies array to be: [lastMessage, msgs]",{"range":"232","text":"233"},"Update the dependencies array to be: [onlineUsers, socket, user.name]",{"range":"234","text":"235"},"Update the dependencies array to be: [msgFrom, recipient]",{"range":"236","text":"237"},"Update the dependencies array to be: [currConv, msgIn, recipient]",{"range":"238","text":"239"},"Update the dependencies array to be: [loadSingleConv, msgFrom, recipient, storeConv]",{"range":"240","text":"241"},[2303,2313],"[cookies.user, socketId, user.name]",[2499,2505],"[emit, socket]",[725,731],"[lastMessage, msgs]",[7184,7186],"[onlineUsers, socket, user.name]",[8688,8697],"[msgFrom, recipient]",[9065,9072],"[currConv, msgIn, recipient]",[9729,9740],"[loadSingleConv, msgFrom, recipient, storeConv]"]